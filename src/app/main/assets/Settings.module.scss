@use "sass:color";
@import "Settings.Additional.module.scss";
// Color Variables
$primary-blue: #2563eb;
$primary-green: #059669;
$primary-red: #dc2626;
$primary-yellow: #d97706;
$gray-50: #f9fafb;
$gray-100: #f3f4f6;
$gray-200: #e5e7eb;
$gray-300: #d1d5db;
$gray-400: #9ca3af;
$gray-500: #6b7280;
$gray-600: #4b5563;
$gray-700: #374151;
$gray-800: #1f2937;
$gray-900: #3369de;
$white: #ffffff;

.container {
    max-width: 1200px;
    margin: 0 auto;
}

// Header
.header {
    display: flex;
    justify-content: space-between;
    align-items: flex-start;
    margin-bottom: 2rem;
    gap: 2rem;

    @media (max-width: 768px) {
        flex-direction: column;
        align-items: center;
        text-align: center;
        gap: 1rem;
    }
}

.headerContent {
    flex: 1;

    h2 {
        font-size: 1.875rem;
        font-weight: 700;
        color: $gray-900;
        margin: 0 0 0.5rem 0;
    }

    p {
        font-size: 1rem;
        color: $gray-600;
        margin: 0;
        line-height: 1.5;
    }
}

.headerActions {
    display: flex;
    gap: 1rem;
    align-items: center;
}

// Categories Grid
.categoriesGrid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
    gap: 1.5rem;

    @media (max-width: 640px) {
        grid-template-columns: 1fr;
    }
}

.categoryWrapper {
    position: relative;
}

.categoryCard {
    background: $white;
    border: 1px solid $gray-200;
    border-radius: 0.75rem;
    padding: 1.5rem;
    cursor: pointer;
    transition: all 0.2s ease-in-out;
    height: 100%;

    &:hover {
        transform: translateY(-4px);
        box-shadow: 0 8px 25px rgba(0, 0, 0, 0.08);
        border-color: $primary-blue;
    }
}

.categoryHeader {
    display: flex;
    align-items: center;
    gap: 1rem;
    min-height: 75px;
}

.categoryIcon {
    font-size: 1.5rem;
    flex-shrink: 0;
}

.categoryInfo {
    flex: 1;

    h3 {
        font-size: 1.125rem;
        font-weight: 600;
        color: $gray-900;
        margin: 0 0 0.25rem 0;
    }

    p {
        font-size: 0.875rem;
        color: $gray-600;
        margin: 0;
        line-height: 1.4;
    }
}

.categoryStatus {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    flex-shrink: 0;

    .statusText {
        font-size: 0.75rem;
        font-weight: 500;
        color: $gray-500;
    }

    .chevron {
        font-size: 1rem;
        color: $gray-400;
    }
}

.statusConnected {
    color: $primary-green;
}

.statusError {
    color: $primary-red;
}

.statusWarning {
    color: $primary-yellow;
}

// Detail View
.detailView {
    .detailHeader {
        margin-bottom: 2rem;
    }

    .headerTop {
        display: flex;
        align-items: center;
        gap: 1rem;
        margin-bottom: 1rem;
    }

    .backButton {
        display: flex;
        align-items: center;
        gap: 0.5rem;
        padding: 0.5rem 1rem;
        background: transparent;
        border: 1px solid $gray-300;
        border-radius: 0.5rem;
        color: $gray-700;
        cursor: pointer;
        transition: all 0.2s ease-in-out;

        &:hover {
            background: $gray-50;
            border-color: $gray-400;
        }
    }

    .detailTitle {
        display: flex;
        align-items: center;
        gap: 1rem;

        .detailIcon {
            font-size: 1.5rem;
        }

        h2 {
            font-size: 1.5rem;
            font-weight: 600;
            color: $gray-900;
            margin: 0;
        }

        p {
            font-size: 0.875rem;
            color: $gray-600;
            margin: 0.25rem 0 0 0;
        }
    }
}

.configWrapper {
    background: $white;
    border: 1px solid $gray-200;
    border-radius: 0.75rem;
    padding: 2rem;
}

// Button Styles
.button {
    display: inline-flex;
    align-items: center;
    gap: 0.5rem;
    padding: 0.625rem 1.25rem;
    border-radius: 0.5rem;
    font-size: 0.875rem;
    font-weight: 600;
    cursor: pointer;
    transition: all 0.2s ease-in-out;
    border: 1px solid transparent;

    &:disabled {
        opacity: 0.6;
        cursor: not-allowed;
    }

    &.primary {
        background-color: $primary-blue;
        color: $white;

        &:hover:not(:disabled) {
            background-color: color.adjust($primary-blue, $lightness: -7%);
        }
    }

    &.secondary {
        background-color: $white;
        color: $gray-700;
        border-color: $gray-300;

        &:hover:not(:disabled) {
            background-color: $gray-50;
            border-color: $gray-400;
        }
    }

    &.danger {
        background-color: $primary-red;
        color: $white;

        &:hover:not(:disabled) {
            background-color: color.adjust($primary-red, $lightness: -7%);
        }
    }

    &.small {
        padding: 0.5rem 0.875rem;
        font-size: 0.75rem;
    }
}

// Loading and Error States
.loadingState,
.errorState {
    text-align: center;
    padding: 3rem 2rem;
    color: $gray-500;

    p {
        margin: 0 0 1rem 0;
    }
}

.errorState {
    color: $primary-red;
}

// Special animations
.spinning {
    animation: spin 1s linear infinite;
}

@keyframes spin {
    from {
        transform: rotate(0deg);
    }
    to {
        transform: rotate(360deg);
    }
}



// =============================================================================
// BaseConfigPanel Styles
// =============================================================================

.configForm {
    display: flex;
    flex-direction: column;
    gap: 1.5rem;
    padding: 0;
    background: transparent;
    border: none;
    border-radius: 0;
}

.formGroup {
    display: flex;
    flex-direction: column;
    gap: 0.5rem;
    padding: 1rem 0;
    border-bottom: 1px solid $gray-200;

    &:last-child {
        border-bottom: none;
    }
}

.configHeader {
    display: flex;
    align-items: center;
    gap: 0.5rem;

    label {
        font-size: 0.875rem;
        font-weight: 600;
        color: $gray-700;
        margin: 0;
    }

    .required {
        color: $primary-red;
        font-weight: 700;
    }
}

.configValue {
    display: flex;
    flex-direction: column;
    gap: 0.5rem;
}

.editContainer {
    display: flex;
    align-items: center;
    gap: 0.75rem;
    min-height: 2.5rem;
}

.valueDisplay {
    flex: 1;
    padding: 0.5rem 0;
    background: transparent;
    border: none;
    border-radius: 0;
    min-height: 2.5rem;
    display: flex;
    align-items: center;
}

.currentValue {
    color: $gray-900;
    font-size: 0.875rem;
    font-weight: 500;
    word-break: break-all;
}

.editInput {
    flex: 1;
    padding: 0.5rem 0.75rem;
    border: 1px solid $gray-300;
    border-radius: 0.375rem;
    font-size: 0.875rem;
    outline: none;
    transition: border-color 0.2s ease;

    &:focus {
        border-color: $primary-blue;
        box-shadow: 0 0 0 2px rgba($primary-blue, 0.1);
    }

    &:disabled {
        background: $gray-100;
        color: $gray-500;
        cursor: not-allowed;
        border-color: $gray-300;
    }
}

.editSelect {
    @extend .editInput;
    cursor: pointer;

    &:disabled {
        cursor: not-allowed;
    }
}

.editButtons {
    display: flex;
    gap: 0.5rem;
    flex-shrink: 0;
}

.editButton {
    display: flex;
    align-items: center;
    justify-content: center;
    width: 2rem;
    height: 2rem;
    border-radius: 0.375rem;
    border: 1px solid $gray-300;
    background: $white;
    color: $gray-600;
    cursor: pointer;
    transition: all 0.2s ease;
    font-size: 0.875rem;

    &:hover:not(:disabled) {
        background: $gray-50;
        color: $gray-800;
        border-color: $gray-400;
    }

    &:disabled {
        opacity: 0.5;
        cursor: not-allowed;
    }

    &.saveButton {
        background: $primary-green;
        color: $white;
        border-color: $primary-green;

        &:hover:not(:disabled) {
            background: color.adjust($primary-green, $lightness: -10%);
            border-color: color.adjust($primary-green, $lightness: -10%);
        }
    }

    &.cancelButton {
        background: $primary-red;
        color: $white;
        border-color: $primary-red;

        &:hover:not(:disabled) {
            background: color.adjust($primary-red, $lightness: -10%);
            border-color: color.adjust($primary-red, $lightness: -10%);
        }
    }
}

.fieldDescription {
    font-size: 0.75rem;
    color: $gray-500;
    line-height: 1.4;
    margin-top: 0.5rem;

    .configPath {
        color: $gray-400;
        font-style: italic;
        display: block;
        margin-top: 0.25rem;
    }

    .unsaved {
        color: $primary-yellow;
        font-weight: 600;
    }

    .saving {
        color: $primary-blue;
        font-weight: 600;
    }
}

.formActions {
    display: flex;
    justify-content: flex-end;
    gap: 1rem;
    padding-top: 1.5rem;
    margin-top: 1rem;
    border-top: 1px solid $gray-200;
}

.button.test {
    background: $primary-blue;
    color: $white;
    border: 1px solid $primary-blue;
    padding: 0.75rem 1.5rem;
    border-radius: 0.5rem;
    font-size: 0.875rem;
    font-weight: 600;
    cursor: pointer;
    transition: all 0.2s ease;

    &:hover:not(:disabled) {
        background: color.adjust($primary-blue, $lightness: -10%);
        border-color: color.adjust($primary-blue, $lightness: -10%);
        transform: translateY(-1px);
        box-shadow: 0 4px 12px rgba($primary-blue, 0.3);
    }

    &:disabled {
        background: $gray-300;
        border-color: $gray-300;
        color: $gray-500;
        cursor: not-allowed;
        transform: none;
        box-shadow: none;
    }
}

// Responsive adjustments for config forms
@media (max-width: 768px) {
    .configForm {
        padding: 0.75rem;
        gap: 1rem;
    }

    .editContainer {
        flex-direction: column;
        align-items: stretch;
        gap: 0.5rem;

        .editButtons {
            justify-content: center;
        }
    }

    .formActions {
        justify-content: center;
    }
}
