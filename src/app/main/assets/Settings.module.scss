@use "sass:color";

// Color Variables
$primary-blue: #2563eb;
$primary-green: #059669;
$primary-red: #dc2626;
$primary-yellow: #d97706;
$gray-50: #f9fafb;
$gray-100: #f3f4f6;
$gray-200: #e5e7eb;
$gray-300: #d1d5db;
$gray-400: #9ca3af;
$gray-500: #6b7280;
$gray-600: #4b5563;
$gray-700: #374151;
$gray-800: #1f2937;
$gray-900: #111827;
$white: #ffffff;

.container {
    max-width: 1200px;
    margin: 0 auto;
}

// Header
.header {
    display: flex;
    justify-content: space-between;
    align-items: flex-start;
    margin-bottom: 2rem;
    gap: 2rem;

    @media (max-width: 768px) {
        flex-direction: column;
        align-items: center;
        text-align: center;
        gap: 1rem;
    }
}

.headerContent {
    flex: 1;

    h2 {
        font-size: 1.875rem;
        font-weight: 700;
        color: $gray-900;
        margin: 0 0 0.5rem 0;
    }

    p {
        color: $gray-600;
        margin: 0;
        line-height: 1.6;
        font-size: 1.125rem;
    }
}

.headerActions {
    display: flex;
    gap: 1rem;
    flex-shrink: 0;
}

// Mode Toggle Styles
.headerTop {
    display: flex;
    align-items: center;
    gap: 1rem;
    margin-bottom: 1rem;
}

.modeToggle {
    display: flex;
    align-items: center;
    gap: 0.75rem;
    padding: 0.75rem 1rem;
    background: $gray-50;
    border: 1px solid $gray-200;
    border-radius: 0.5rem;

    .modeLabel {
        font-weight: 600;
        color: $gray-700;
        font-size: 0.875rem;
    }

    .toggleButton {
        background: none;
        border: none;
        cursor: pointer;
        color: $primary-blue;
        font-size: 1.5rem;
        transition: color 0.2s ease-in-out;

        &:hover {
            color: color.adjust($primary-blue, $lightness: -10%);
        }
    }

    .modeDescription {
        color: $gray-500;
        font-size: 0.75rem;
        max-width: 200px;
        line-height: 1.4;
    }
}

// Categories Grid
.categoriesGrid {
    display: flex;
    flex-direction: column;
    gap: 1rem;
}

.categoryWrapper {
    background: $white;
    border-radius: 0.75rem;
    border: 1px solid $gray-200;
    overflow: hidden;
    transition: all 0.2s ease-in-out;

    &:hover {
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
        border-color: rgba($primary-blue, 0.3);
    }
}

.categoryCard {
    cursor: pointer;
    transition: all 0.2s ease-in-out;

    &.active {
        background-color: rgba($primary-blue, 0.02);
    }
}

.categoryHeader {
    display: flex;
    align-items: center;
    padding: 1.5rem;
    gap: 1rem;
}

.categoryIcon {
    width: 3rem;
    height: 3rem;
    display: flex;
    align-items: center;
    justify-content: center;
    background: $gray-50;
    border-radius: 0.75rem;
    font-size: 1.5rem;
    flex-shrink: 0;
}

.categoryInfo {
    flex: 1;

    h3 {
        font-size: 1.25rem;
        font-weight: 600;
        color: $gray-900;
        margin: 0 0 0.25rem 0;
    }

    p {
        color: $gray-600;
        margin: 0;
        font-size: 0.925rem;
        line-height: 1.5;
    }
}

.categoryStatus {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    flex-shrink: 0;
}

.statusText {
    font-size: 0.875rem;
    font-weight: 500;
    color: $gray-600;
}

.statusConnected {
    color: $primary-green;
    width: 1.25rem;
    height: 1.25rem;
}

.statusError {
    color: $primary-red;
    width: 1.25rem;
    height: 1.25rem;
}

.chevron {
    width: 1.25rem;
    height: 1.25rem;
    color: $gray-400;
    transition: transform 0.2s ease-in-out;

    &.expanded {
        transform: rotate(90deg);
    }
}

// Configuration Panel
.configPanel {
    border-top: 1px solid $gray-200;
    background: $gray-50;
    animation: slideDown 0.3s ease-in-out;
}

@keyframes slideDown {
    from {
        opacity: 0;
        max-height: 0;
    }

    to {
        opacity: 1;
        max-height: 500px;
    }
}

.configContent {
    padding: 1.5rem;

    h4 {
        font-size: 1.125rem;
        font-weight: 600;
        color: $gray-900;
        margin: 0 0 1rem 0;
    }

    p {
        color: $gray-600;
        margin: 0;
        line-height: 1.6;
    }
}

// Form Styles (for next step)
.formGroup {
    margin-bottom: 1.5rem;

    label {
        display: block;
        font-size: 0.875rem;
        font-weight: 500;
        color: $gray-700;
        margin-bottom: 0.5rem;
    }

    input,
    select,
    textarea {
        width: 100%;
        padding: 0.75rem;
        border: 1px solid $gray-300;
        border-radius: 0.5rem;
        font-size: 0.925rem;
        transition: border-color 0.2s ease-in-out;

        &:focus {
            outline: none;
            border-color: $primary-blue;
            box-shadow: 0 0 0 3px rgba($primary-blue, 0.1);
        }

        &::placeholder {
            color: $gray-400;
        }
    }

    textarea {
        resize: vertical;
        min-height: 80px;
    }

    small {
        display: block;
        margin-top: 0.25rem;
        font-size: 0.8rem;
        color: $gray-500;
        line-height: 1.4;
    }

    .error {
        color: $primary-red;
        font-weight: 500;
    }

    .success {
        color: $primary-green;
        font-weight: 500;
    }

    input.error,
    select.error {
        border-color: $primary-red;
        box-shadow: 0 0 0 3px rgba($primary-red, 0.1);
    }

    input.success,
    select.success {
        border-color: $primary-green;
        box-shadow: 0 0 0 3px rgba($primary-green, 0.1);
    }
}

.formActions {
    display: flex;
    gap: 0.75rem;
    justify-content: flex-end;
    margin-top: 1.5rem;
    padding-top: 1.5rem;
    border-top: 1px solid $gray-200;
}

.button {
    padding: 0.625rem 1.25rem;
    border-radius: 0.5rem;
    font-size: 0.875rem;
    font-weight: 500;
    cursor: pointer;
    transition: all 0.2s ease-in-out;
    border: 1px solid transparent;

    &:disabled {
        cursor: not-allowed;
    }

    &.primary {
        background-color: $primary-blue;
        color: $white;

        &:hover:not(:disabled) {
            background-color: color.adjust($primary-blue, $lightness: -10%);
        }

        &:disabled {
            background-color: $gray-300;
            color: $gray-500;
        }
    }

    &.secondary {
        background-color: $white;
        color: $gray-700;
        border-color: $gray-300;

        &:hover:not(:disabled) {
            background-color: $gray-50;
        }

        &:disabled {
            background-color: $gray-100;
            color: $gray-400;
            border-color: $gray-200;
        }
    }

    &.test {
        background-color: $primary-green;
        color: $white;

        &:hover:not(:disabled) {
            background-color: color.adjust($primary-green, $lightness: -10%);
        }

        &:disabled {
            background-color: $gray-300;
            color: $gray-500;
        }
    }

    &.danger {
        background-color: $primary-red;
        color: $white;

        &:hover:not(:disabled) {
            background-color: color.adjust($primary-red, $lightness: -10%);
        }

        &:disabled {
            background-color: $gray-300;
            color: $gray-500;
        }
    }
}

// Detail View Styles
.detailView {
    max-width: 800px;
    margin: 0 auto;
}

.detailHeader {
    display: flex;
    align-items: flex-start;
    gap: 1rem;
    margin-bottom: 2rem;
    padding-bottom: 1.5rem;
    border-bottom: 1px solid $gray-200;
}

.backButton {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    padding: 0.625rem 1rem;
    background: $white;
    border: 1px solid $gray-300;
    border-radius: 0.5rem;
    color: $gray-700;
    font-size: 0.875rem;
    font-weight: 500;
    cursor: pointer;
    transition: all 0.2s ease-in-out;

    &:hover {
        background: $gray-50;
        border-color: $gray-400;
    }

    svg {
        width: 1rem;
        height: 1rem;
    }
}

.detailTitle {
    display: flex;
    align-items: flex-start;
    gap: 1rem;
    flex: 1;

    h2 {
        font-size: 1.875rem;
        font-weight: 700;
        color: $gray-900;
        margin: 0 0 0.25rem 0;
    }

    p {
        color: $gray-600;
        margin: 0;
        line-height: 1.6;
    }
}

.detailIcon {
    width: 4rem;
    height: 4rem;
    display: flex;
    align-items: center;
    justify-content: center;
    background: $gray-50;
    border-radius: 1rem;
    font-size: 2rem;
    flex-shrink: 0;
}

.configWrapper {
    background: $white;
    border-radius: 0.75rem;
    border: 1px solid $gray-200;
    padding: 2rem;
}

.configForm {
    display: grid;
    gap: 1.5rem;

    .formGroup {
        label {
            display: block;
            font-size: 0.875rem;
            font-weight: 600;
            color: $gray-700;
            margin-bottom: 0.5rem;
        }

        input,
        select {
            width: 100%;
            padding: 0.25rem 0.8rem;
            border: 1px solid $gray-300;
            border-radius: 0.5rem;
            font-size: 0.875rem;
            background: $white;
            transition: all 0.2s ease-in-out;

            &:focus {
                outline: none;
                border-color: $primary-blue;
                box-shadow: 0 0 0 3px rgba($primary-blue, 0.1);
            }

            &::placeholder {
                color: $gray-400;
            }
        }

        select {
            cursor: pointer;
        }

        input[type="password"] {
            font-family: monospace;
            letter-spacing: 2px;

            &::placeholder {
                font-family: inherit;
                letter-spacing: normal;
            }
        }
    }
}

// Special styling for select dropdowns
.editSelect {
    appearance: none; /* Remove default browser styling */
    background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' fill='none' viewBox='0 0 20 20'%3e%3cpath stroke='%236b7280' stroke-linecap='round' stroke-linejoin='round' stroke-width='1.5' d='m6 8 4 4 4-4'/%3e%3c/svg%3e");
    background-position: right 0.875rem center;
    background-repeat: no-repeat;
    background-size: 1.125rem;
    padding-right: 2.75rem;
    cursor: pointer;
    transition: all 0.2s ease-in-out;
    border: 2px solid $gray-300;
    height: 2.5rem; // editInput과 동일한 높이
    box-sizing: border-box; // border를 포함한 박스 크기 계산
    font-size: 0.875rem; // currentValue와 동일한 폰트 크기
    
    &:hover {
        border-color: $gray-400;
        background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' fill='none' viewBox='0 0 20 20'%3e%3cpath stroke='%234b5563' stroke-linecap='round' stroke-linejoin='round' stroke-width='1.5' d='m6 8 4 4 4-4'/%3e%3c/svg%3e");
    }
    
    &:focus {
        border-color: $primary-blue;
        box-shadow: 0 0 0 3px rgba($primary-blue, 0.1);
        background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' fill='none' viewBox='0 0 20 20'%3e%3cpath stroke='%232563eb' stroke-linecap='round' stroke-linejoin='round' stroke-width='1.5' d='m6 8 4 4 4-4'/%3e%3c/svg%3e");
    }

    &:disabled {
        background-color: $gray-100;
        border-color: $gray-200;
        background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' fill='none' viewBox='0 0 20 20'%3e%3cpath stroke='%239ca3af' stroke-linecap='round' stroke-linejoin='round' stroke-width='1.5' d='m6 8 4 4 4-4'/%3e%3c/svg%3e");
        cursor: not-allowed;
        color: $gray-500;
    }

    // Style for option elements
    option {
        padding: 0.75rem;
        background-color: $white;
        color: $gray-700;
        border: none;
        font-size: 0.875rem;
        
        &:hover {
            background-color: $gray-50;
        }
        
        &:checked {
            background-color: $primary-blue;
            color: $white;
        }
    }
}

// Loading and Error States
.loadingState, .errorState {
    padding: 2rem;
    text-align: center;
    color: $gray-600;

    p {
        margin: 0 0 1rem 0;
        font-size: 1rem;
    }
}

.errorState {
    background: color.adjust($primary-red, $lightness: 45%);
    border: 1px solid color.adjust($primary-red, $lightness: 35%);
    border-radius: 0.5rem;
    color: color.adjust($primary-red, $lightness: -20%);
}

// Advanced Config Styles
.configPath {
    font-family: 'Courier New', monospace;
    font-size: 0.75rem;
    color: $gray-400;
    display: block;
    margin-top: 0.25rem;
}

.required {
    color: $primary-red;
    margin-left: 0.25rem;
}

.unsaved {
    color: $primary-yellow;
    font-weight: 600;
}

.saving {
    color: $primary-blue;
    font-weight: 600;
}

// Config item header
.configHeader {
    margin-bottom: 0.5rem;

    label {
        display: block;
        font-size: 0.875rem;
        font-weight: 600;
        color: $gray-700;
    }
}

.editButton {
    background: none;
    border: 1px solid $gray-300;
    border-radius: 0.25rem;
    width: 2rem;
    height: 2rem;
    display: flex;
    align-items: center;
    justify-content: center;
    cursor: pointer;
    color: $gray-600;
    transition: all 0.2s ease-in-out;

    &:hover {
        background-color: $gray-50;
        border-color: $gray-400;
        color: $gray-700;
    }

    svg {
        width: 0.875rem;
        height: 0.875rem;
    }
}

.saveButton {
    background-color: $primary-green;
    border-color: $primary-green;
    color: $white;

    &:hover {
        background-color: color.adjust($primary-green, $lightness: -10%);
        border-color: color.adjust($primary-green, $lightness: -10%);
    }

    &:disabled {
        background-color: $gray-300;
        border-color: $gray-300;
        color: $gray-500;
        cursor: not-allowed;
    }
}

.cancelButton {
    background-color: $primary-red;
    border-color: $primary-red;
    color: $white;

    &:hover {
        background-color: color.adjust($primary-red, $lightness: -10%);
        border-color: color.adjust($primary-red, $lightness: -10%);
    }

    &:disabled {
        background-color: $gray-300;
        border-color: $gray-300;
        color: $gray-500;
        cursor: not-allowed;
    }
}

.configValue {
    margin-bottom: 0.75rem;
}

.editContainer {
    display: flex;
    align-items: center;
    gap: 0.5rem;
}

.editInput {
    flex: 1;
    padding: 0.5rem 0.75rem;
    border: 2px solid $gray-300;
    border-radius: 0.375rem;
    font-size: 0.875rem; // currentValue와 동일한 폰트 크기
    transition: all 0.2s ease-in-out;
    height: 2.5rem; // 고정된 높이로 valueDisplay와 맞춤
    box-sizing: border-box; // border를 포함한 박스 크기 계산

    &:hover {
        border-color: $gray-400;
    }

    &:focus {
        outline: none;
        border-color: $primary-blue;
        box-shadow: 0 0 0 3px rgba($primary-blue, 0.1);
    }

    &:disabled {
        background-color: $gray-100;
        border-color: $gray-200;
        color: $gray-500;
        cursor: not-allowed;
    }
}

.editButtons {
    display: flex;
    gap: 0.25rem;
}

.valueDisplay {
    padding: 0.5rem 0.75rem; // editInput과 동일한 padding
    background-color: $gray-50;
    border: 2px solid $gray-200; // editInput과 동일한 border 두께
    border-radius: 0.375rem; // editInput과 동일한 border-radius
    height: 2.5rem; // editInput과 동일한 높이
    box-sizing: border-box; // border를 포함한 박스 크기 계산
    display: flex;
    align-items: center;
    flex: 1; // editContainer 내에서 최대 공간 차지
}

.currentValue {
    font-size: 0.875rem;
    color: $gray-700;
    word-break: break-all;
}

.fieldDescription {
    display: block;
    margin-top: 0.5rem;
    line-height: 1.4;
}

// Responsive Design
@media (max-width: 768px) {
    .categoryHeader {
        padding: 1rem;
        flex-direction: column;
        align-items: flex-start;
        gap: 0.75rem;
    }

    .categoryStatus {
        align-self: flex-end;
    }

    .configContent {
        padding: 1rem;
    }

    .formActions {
        flex-direction: column;

        .button {
            width: 100%;
        }
    }

    .detailHeader {
        flex-direction: column;
        gap: 1rem;
    }

    .detailTitle {
        flex-direction: column;
        gap: 0.75rem;
    }

    .detailIcon {
        width: 3rem;
        height: 3rem;
        font-size: 1.5rem;
    }

    .configWrapper {
        padding: 1.5rem;
    }

    .backButton {
        align-self: flex-start;
    }

    .headerTop {
        flex-direction: column;
        align-items: flex-start;
        gap: 0.75rem;
    }

    .modeToggle {
        width: 100%;
        flex-direction: column;
        align-items: flex-start;
        gap: 0.5rem;

        .modeDescription {
            max-width: 100%;
        }
    }

    .configHeader {
        flex-direction: column;
        align-items: flex-start;
        gap: 0.5rem;
    }

    .editContainer {
        flex-direction: column;
        align-items: stretch;
    }

    .editButtons {
        justify-content: flex-end;
    }
}